package com.example.clean_code.chap10;

/*
	# 클래스

	1. 클래스 체계
		- 클래스는 추상화 단계가 순차적으로 내려간다. (신문기사 처럼 읽힌다)

	2. 클래스는 작아야 한다.
		- "작게" 가 기본 규칙
		- 클래스가 맡은 책임을 센다.
		- 클래스 이름은 해당 클래스의 책임을 기술한다.
		 	- 클래스 이름이 현재 모호하다면 책임이 너무 많아서 그렇다.
		- 단일 책임 원칙
			- 클래스나 모듈을 변경할 이유가 단 하나 뿐이어야 한다는 원칙
		- 복잡성을 다루러면 체계적인 정리가 필수다.
			- 무엇이 어디에 있는지 쉽게 찾는다.
			- 큰 클래스 몇개가 아니라 작은 클래스 여러개의 시스템이 더 바람직핟,.
		- 몇몇 메서드에서만 사용하는 인스턴스 변수가 많아진다면 새로운 클래스로 쪼개야 한다는 신호다.
			- 응집도가 높아지도록 변수와 메서드를 분리 후 클래스를 쪼갠다.
			- 응집도를 유지하면 작은 클래스 여럿이 나온다.

	3. 변경하기 쉬운 클래스
		- 새 기능을 수정하거나 기존 기능을 변경할 때 건드릴 코드가 최소인 시스템
		- 어떤 코드는 클래스에 손을 대면 다른 코드를 망가뜨릴 위험이 존재한다. 
		- 상속과 다형성을 활용
		- 추상화에 의존
 */
public class Chap10 {
}
